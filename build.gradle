apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'antlr'

repositories {
    mavenCentral()
}

dependencies {
    compile "org.antlr:antlr4-runtime:4.5"
    antlr 'org.antlr:antlr4:4.5'
    testCompile 'junit:junit:4.12'
}

// generate a jar that runs the test program
jar {
    manifest {
        attributes 'Main-Class' : 'eu.rossng.test.Test'
    }
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
}

// generate java from the ANTLR g4 files
generateGrammarSource {
    arguments = ['-visitor', '-package', 'eu.rossng']
    outputDirectory = file("${project.buildDir}/generated-src/main/java/")
}

// copy the java code generated by ANTLR into a folder outside the build directory
// for the benefit of IntelliJ IDEA - make sure gen/main/java is marked as a generated
// sources folder
generateGrammarSource << {
    copy {
        from "${project.buildDir}/generated-src/main/java/"
        into "src/generated/java"
    }
}

// make sure that ANTLR generates java before compiling the project
// include the generated java code in the compilation
compileJava.dependsOn generateGrammarSource
compileJava {
    source = ['build/generated-src/main/java', 'src/main/java']
}

// when cleaning, remove the generated sources too
task removeGeneratedSource(type: Delete) {
    delete 'src/generated/'
}
clean.dependsOn removeGeneratedSource

// mark the generated source as such for IntelliJ IDEA
sourceSets.main.java.srcDirs += file("src/generated/java")
idea {
  module {
    generatedSourceDirs += file('src/generated/java')
  }
}